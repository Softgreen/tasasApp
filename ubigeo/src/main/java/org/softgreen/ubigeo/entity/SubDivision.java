package org.softgreen.ubigeo.entity;

// Generated 02-may-2014 11:48:28 by Hibernate Tools 4.0.0

import java.sql.Timestamp;

import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Version;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlRootElement;

import org.hibernate.annotations.NamedQuery;
import org.hibernate.validator.constraints.NotBlank;
import org.hibernate.validator.constraints.NotEmpty;

/**
 * TipoDocumento generated by hbm2java
 */
@Entity
@Table
@XmlRootElement
@XmlAccessorType(XmlAccessType.PROPERTY)
@NamedQuery(name = SubDivision.findAll, query = "Select s from SubDivision s")
public class SubDivision implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	public final static String base = "org.softgreen.ubigeo.entity.Departamento";
	public final static String findAll = base + "findAll";

	private String code;
	private String name;
	private SubDivisionCategory subDivisionCategory;
	private SubDivision parent;

	private Timestamp version;

	public SubDivision() {
	}

	@NotNull
	@Size(min = 1, max = 30)
	@NotBlank
	@NotEmpty
	@Id
	public String getCode() {
		return code;
	}

	public void setCode(String code) {
		this.code = code;
	}

	@NotNull
	@Size(min = 1, max = 200)
	@NotBlank
	@NotEmpty
	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@NotNull
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(foreignKey = @ForeignKey)
	public SubDivisionCategory getSubDivisionCategory() {
		return subDivisionCategory;
	}

	public void setSubDivisionCategory(SubDivisionCategory subDivisionCategory) {
		this.subDivisionCategory = subDivisionCategory;
	}

	@NotNull
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(foreignKey = @ForeignKey)
	public SubDivision getParent() {
		return parent;
	}

	public void setParent(SubDivision parent) {
		this.parent = parent;
	}

	@Version
	public Timestamp getVersion() {
		return version;
	}

	public void setVersion(Timestamp version) {
		this.version = version;
	}

}
