package org.softgreen.tasas.model;

// Generated 16/08/2014 01:49:33 PM by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.NaturalId;
import org.hibernate.annotations.Parameter;
import org.hibernate.validator.constraints.NotBlank;
import org.hibernate.validator.constraints.NotEmpty;

/**
 * TipoServicio generated by hbm2java
 */
@Entity
@Table(name = "TIPO_SERVICIO")
@GenericGenerator(name = "TipoServicioGenerator", strategy = "org.hibernate.id.enhanced.SequenceStyleGenerator", parameters = {
		@Parameter(name = "prefer_sequence_per_entity", value = "true"),
		@Parameter(name = "optimizer ", value = "pooled") })
@NamedQueries({ @NamedQuery(name = TipoServicio.findByDenominacion, query = "SELECT t FROM TipoServicio t WHERE t.denominacion = :denominacion") })
public class TipoServicio implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	public final static String findByDenominacion = "TipoServicio.findByDenominacion";

	private Integer idTipoServicio;
	private String denominacion;
	private String descripcion;
	private Set servicios = new HashSet(0);

	private Date version;

	public TipoServicio() {
	}

	@Id
	@GeneratedValue(generator = "TipoServicioGenerator")
	@Column(name = "ID_TIPO_SERVICIO", unique = true, nullable = false, precision = 22, scale = 0)
	public Integer getIdTipoServicio() {
		return this.idTipoServicio;
	}

	public void setIdTipoServicio(Integer idTipoServicio) {
		this.idTipoServicio = idTipoServicio;
	}

	@NotNull
	@NotEmpty
	@NotBlank
	@Size(min = 1, max = 30)
	@NaturalId
	@Column(name = "DENOMINACION", nullable = false, length = 30)
	public String getDenominacion() {
		return this.denominacion;
	}

	public void setDenominacion(String denominacion) {
		this.denominacion = denominacion;
	}

	@Size(min = 1, max = 100)
	@Column(name = "DESCRIPCION", length = 100)
	public String getDescripcion() {
		return this.descripcion;
	}

	public void setDescripcion(String descripcion) {
		this.descripcion = descripcion;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tipoServicio")
	public Set<Servicio> getServicios() {
		return this.servicios;
	}

	public void setServicios(Set servicios) {
		this.servicios = servicios;
	}

	@Version
	@Temporal(value = TemporalType.TIMESTAMP)
	@Column(name = "OPTLOCK")
	public Date getVersion() {
		return this.version;
	}

	public void setVersion(Date version) {
		this.version = version;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result
				+ ((denominacion == null) ? 0 : denominacion.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		TipoServicio other = (TipoServicio) obj;
		if (denominacion == null) {
			if (other.denominacion != null)
				return false;
		} else if (!denominacion.equals(other.denominacion))
			return false;
		return true;
	}

}
