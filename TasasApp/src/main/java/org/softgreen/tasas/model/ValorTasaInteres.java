package org.softgreen.tasas.model;

// Generated 16/08/2014 01:49:33 PM by Hibernate Tools 4.0.0

import java.math.BigDecimal;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;
import javax.validation.constraints.DecimalMax;
import javax.validation.constraints.DecimalMin;
import javax.validation.constraints.Digits;
import javax.validation.constraints.Max;
import javax.validation.constraints.Min;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;
import org.hibernate.annotations.Type;

/**
 * ValorTasaInteres generated by hbm2java
 */
@Entity
@Table(name = "VALOR_TASA_INTERES")
@GenericGenerator(name = "ValorTasaInteresGenerator", strategy = "org.hibernate.id.enhanced.SequenceStyleGenerator", parameters = {
		@Parameter(name = "prefer_sequence_per_entity", value = "true"),
		@Parameter(name = "optimizer ", value = "pooled") })
public class ValorTasaInteres implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	private Long idValorTasaInteres;
	private TasaInteres tasaInteres;
	private String moneda;
	private Servicio servicio;
	private Date fechaInicio;
	private Date fechaFin;
	private BigDecimal montoMinimo;
	private BigDecimal montoMaximo;
	private Integer periodoMinimo;
	private Integer periodoMaximo;
	private BigDecimal valor;
	private boolean estado;

	private Date version;

	public ValorTasaInteres() {
	}

	@Id
	@GeneratedValue(generator = "ValorTasaInteresGenerator")
	@Column(name = "ID_VALOR_TASA_INTERES", unique = true, nullable = false)
	public Long getIdValorTasaInteres() {
		return this.idValorTasaInteres;
	}

	public void setIdValorTasaInteres(Long idValorTasaInteres) {
		this.idValorTasaInteres = idValorTasaInteres;
	}

	@NotNull
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_TASA_INTERES", nullable = false, foreignKey = @ForeignKey)
	public TasaInteres getTasaInteres() {
		return this.tasaInteres;
	}

	public void setTasaInteres(TasaInteres tasaInteres) {
		this.tasaInteres = tasaInteres;
	}

	@NotNull
	@Size(min = 3, max = 3)
	@Column(name = "MONEDA", nullable = false, length = 3)
	public String getMoneda() {
		return this.moneda;
	}

	public void setMoneda(String moneda) {
		this.moneda = moneda;
	}

	@NotNull
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_SERVICIO", nullable = false, foreignKey = @ForeignKey)
	public Servicio getServicio() {
		return this.servicio;
	}

	public void setServicio(Servicio servicio) {
		this.servicio = servicio;
	}

	@NotNull
	@Temporal(TemporalType.DATE)
	@Column(name = "FECHA_INICIO")
	public Date getFechaInicio() {
		return this.fechaInicio;
	}

	public void setFechaInicio(Date fechaInicio) {
		this.fechaInicio = fechaInicio;
	}

	@NotNull
	@Temporal(TemporalType.DATE)
	@Column(name = "FECHA_FIN")
	public Date getFechaFin() {
		return this.fechaFin;
	}

	public void setFechaFin(Date fechaFin) {
		this.fechaFin = fechaFin;
	}

	@NotNull
	@Min(value = 0)
	@DecimalMin(value = "0")
	@Digits(integer = 18, fraction = 2)
	@Column(name = "MONTO_MINIMO")
	public BigDecimal getMontoMinimo() {
		return this.montoMinimo;
	}

	public void setMontoMinimo(BigDecimal montoMinimo) {
		this.montoMinimo = montoMinimo;
	}

	@NotNull
	@Min(value = 0)
	@DecimalMin(value = "0")
	@Digits(integer = 18, fraction = 2)
	@Column(name = "MONTO_MAXIMO")
	public BigDecimal getMontoMaximo() {
		return this.montoMaximo;
	}

	public void setMontoMaximo(BigDecimal montoMaximo) {
		this.montoMaximo = montoMaximo;
	}

	@NotNull
	@Min(value = 0)
	@Column(name = "PERIODO_MINIMO")
	public Integer getPeriodoMinimo() {
		return this.periodoMinimo;
	}

	public void setPeriodoMinimo(Integer periodoMinimo) {
		this.periodoMinimo = periodoMinimo;
	}

	@NotNull
	@Min(value = 0)
	@Column(name = "PERIODO_MAXIMO")
	public Integer getPeriodoMaximo() {
		return this.periodoMaximo;
	}

	public void setPeriodoMaximo(Integer periodoMaximo) {
		this.periodoMaximo = periodoMaximo;
	}

	@NotNull
	@Min(value = 0)
	@Max(value = 1)
	@DecimalMin(value = "0")
	@DecimalMax(value = "1")
	@Digits(integer = 1, fraction = 3)
	@Column(name = "VALOR")
	public BigDecimal getValor() {
		return this.valor;
	}

	public void setValor(BigDecimal valor) {
		this.valor = valor;
	}

	@NotNull
	@Type(type = "org.hibernate.type.TrueFalseType")
	@Column(name = "ESTADO")
	public boolean isEstado() {
		return estado;
	}

	public void setEstado(boolean estado) {
		this.estado = estado;
	}

	@Version
	@Temporal(value = TemporalType.TIMESTAMP)
	@Column(name = "OPTLOCK")
	public Date getVersion() {
		return this.version;
	}

	public void setVersion(Date version) {
		this.version = version;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime
				* result
				+ ((idValorTasaInteres == null) ? 0 : idValorTasaInteres
						.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		ValorTasaInteres other = (ValorTasaInteres) obj;
		if (idValorTasaInteres == null) {
			if (other.idValorTasaInteres != null)
				return false;
		} else if (!idValorTasaInteres.equals(other.idValorTasaInteres))
			return false;
		return true;
	}

}
